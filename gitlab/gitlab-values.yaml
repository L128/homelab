# 核心：禁用 GitLab Chart 对 cert-manager CRD 的管理
certmanager:
  installCRDs: false  # 不安装 cert-manager 的 CRD（已由 cert-manager 自身安装）

# 全局配置（核心）
global:
  # 域名与访问设置
  hosts:
    domain: homelab.me          # 基础域名，与证书的主域名匹配
    https: true                 # 强制使用 HTTPS
    gitlab:
      name: gitlab.app.homelab.me  # 完整访问域名，匹配证书的 *.app.homelab.me
    # 禁用其他组件的独立域名（如不需要可删除）
    registry:
      enabled: false
    minio:
      enabled: false
    mattermost:
      enabled: false

  # Ingress 配置（适配 Traefik + cert-manager）
  ingress:
    enabled: true
    class: traefik              # 指定 Traefik 作为 Ingress 控制器
    # 禁止 GitLab Chart 管理 IngressClass 资源
    IngressClass:
      create: false  # 关键：不创建新的 IngressClass，使用集群中已有的
    annotations:
      # Traefik 相关注解（按需添加）
      traefik.ingress.kubernetes.io/router.entrypoints: websecure  # 使用 HTTPS 入口
      # 若需要强制 HTTP 跳转 HTTPS，添加以下注解
      traefik.ingress.kubernetes.io/router.middlewares: gitlab-redirectscheme@kubernetescrd
    apiVersion: networking.k8s.io/v1  # K3s 通常支持此版本

    # TLS 配置（关联 cert-manager 生成的 secret）
    tls:
      enabled: true
      secretName: myapps-tls     # 与 Certificate.spec.secretName 一致

  certmanager:
    install: false  # 禁用内置 cert-manager
    # 禁用 Let's Encrypt 相关配置（若有默认启用的逻辑）
    acme:
      enabled: false

# 禁用内置 certmanager-issuer（解决邮箱错误）
certmanager-issuer:
  install: false  # 关键：关闭内置签发器配置，不再要求邮箱
  email: "dummy@homelab.me"  # 占位邮箱，仅用于绕过模板检查（无需真实邮箱）

# 额外：创建 HTTP 跳转 HTTPS 的中间件（可选但推荐）
middleware:
  redirectscheme:
    enabled: true
    config:
      scheme: https
      permanent: true


# 组件配置（精简）
gitlab:
  webservice:
    ingress:
      # 继承全局 ingress 配置，无需重复设置
      enabled: true

# 禁用不需要的组件（节省资源）
postgresql:
  install: true  # 若使用外部 PostgreSQL 可设为 false 并配置 global.psql

redis:
  install: true  # 若使用外部 Redis 可设为 false 并配置 global.redis